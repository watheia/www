/*
Copyright 2019 Adobe. All rights reserved.
This file is licensed to you under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License. You may obtain a copy
of the License at http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under
the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
OF ANY KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.
*/

@import "~@watheia/theme.styles.commons";

:root {
  --wa-tableform-border-spacing: 0 var(--wa-global-dimension-size-300);
  --wa-tableform-margin: calc(var(--wa-global-dimension-size-250) * -1) 0;
  --wa-fieldlabel-margin: var(--wa-global-dimension-size-100);
}

.spectrum-FieldLabel {
  display: flex;
  flex: 0 0 auto;

  box-sizing: border-box;

  padding: var(--wa-fieldlabel-padding-top) 0 var(--wa-fieldlabel-padding-bottom);

  font-size: var(--wa-fieldlabel-text-size);
  font-weight: var(--wa-fieldlabel-text-font-weight);
  line-height: var(--wa-fieldlabel-text-line-height);

  vertical-align: top;

  -webkit-font-smoothing: subpixel-antialiased;
  -moz-osx-font-smoothing: auto;
  font-smoothing: subpixel-antialiased;
  text-align: start;

  cursor: default; /* match native labels even if not using a <label> element */
}

.spectrum-FieldLabel--positionSide {
  display: inline-flex;
  padding-top: var(--wa-fieldlabel-side-padding-top);
  padding-inline-end: var(--wa-fieldlabel-side-padding-x);
}

.spectrum-FieldLabel-requiredIcon {
  margin-top: var(--wa-fieldlabel-asterisk-margin-y);
  margin-inline-end: 0;
  margin-bottom: 0;
  margin-inline-start: var(--wa-fieldlabel-asterisk-gap);
}

.spectrum-FieldLabel--alignEnd {
  justify-content: flex-end; /* labelPosition=top case */
  text-align: end; /* labelPosition=side case */
}

/* A Field is a wrapper for a FieldLabel and a field component (e.g. textfield).
 * By default, labels are placed above the field. Fields have a default width, and the
 * label will wrap within this width. The width of the whole field can be overridden by the user,
 * and this causes both the label and inner field to resize as well. */
.spectrum-Field {
  --wa-field-default-width: var(--wa-component-single-line-width);

  &.spectrum-Field--positionTop {
    display: inline-flex;
    flex-direction: column;
    width: var(--wa-field-default-width);

    .spectrum-Field-field {
      /* If the user overrides the width of the field, propagate to the inner component */
      width: 100%;
    }

    .spectrum-Field-field--multiline {
      flex: 1 1 auto;
    }
  }

  /* The side label variant of Field is inline, and fills as much space as needed
   * by default. If an explicit width is set, then the field flexes to fill available space. */
  &.spectrum-Field--positionSide {
    display: inline-flex;
    align-items: flex-start;

    .spectrum-Field-field {
      flex: 1;
    }

    .spectrum-Field-field--multiline {
      height: 100%;
    }
  }
}

/* topdoc
{{ form/index.yml }}
*/

.spectrum-Form {
  /* With labelPosition=side, we override field layout to use a CSS table
   * so that all the labels and fields line up automatically. */
  &.spectrum-Form--positionSide {
    display: table;
    border-collapse: separate;
    border-spacing: var(--wa-tableform-border-spacing);
    margin: var(--wa-tableform-margin);
    text-align: start;

    .spectrum-Field {
      display: table-row;
      width: 100%;
    }

    .spectrum-FieldLabel {
      display: table-cell;
    }

    .spectrum-Field-field {
      display: table-cell;
      width: auto;
      min-width: var(--wa-component-single-line-width);
    }
  }

  /* With labelPosition=top, we use a normal flex stack */
  &.spectrum-Form--positionTop {
    display: flex;
    flex-direction: column;
    margin: 0;
    min-width: var(--wa-component-single-line-width);

    /* Users may want to make multiple fields appear next to each other.
     * We want to ensure that all items inside the form get the proper
     * margin and widths applied, even if wrapped in extra divs for example. */
    > * {
      margin-top: var(--wa-fieldlabel-margin);
      width: 100%;
    }
  }
}
